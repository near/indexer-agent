"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const helpers_1 = require("../src/helpers");
const node_test_1 = require("node:test");
(0, node_test_1.describe)("Helpers", () => {
    (0, node_test_1.describe)("isMatchingReceiverSingle", () => {
        it("should match wildcard", () => {
            expect((0, helpers_1.isMatchingReceiverSingle)("test", "*")).toBeTruthy();
        });
        it("should not match different contract", () => {
            expect((0, helpers_1.isMatchingReceiverSingle)("test", "acc.near")).toEqual(false);
        });
        it("should match sub-sub-account", () => {
            expect((0, helpers_1.isMatchingReceiverSingle)("a.acc.near", "*.acc.near")).toEqual(true);
        });
        it("should match sub-sub-account", () => {
            expect((0, helpers_1.isMatchingReceiverSingle)("a.b.acc.near", "*.acc.near")).toEqual(true);
        });
    });
    (0, node_test_1.describe)("isMatchingReceiver", () => {
        it("should match wildcard", () => {
            expect((0, helpers_1.isMatchingReceiver)("test", "*")).toEqual(true);
        });
        it("should not match different contract", () => {
            expect((0, helpers_1.isMatchingReceiverSingle)("test", "test1")).toEqual(false);
        });
    });
    (0, node_test_1.describe)("isMatchingReceiptStatus", () => {
        const table = [
            {
                receiptStatus: { SuccessValue: new Uint8Array() },
                statusFilter: "all",
                expected: true,
            },
            {
                receiptStatus: { SuccessValue: new Uint8Array() },
                statusFilter: "onlyFailed",
                expected: false,
            },
            {
                receiptStatus: { SuccessValue: new Uint8Array() },
                statusFilter: "onlySuccessful",
                expected: true,
            },
            {
                receiptStatus: { Failure: "" },
                statusFilter: "onlySuccessful",
                expected: false,
            },
            {
                receiptStatus: { Failure: "" },
                statusFilter: "onlyFailed",
                expected: true,
            },
        ];
        it.each(table)("should return `$expected` for `$receiptStatus` with filter `$statusFilter`", ({ receiptStatus, statusFilter, expected }) => {
            expect((0, helpers_1.isMatchingReceiptStatus)(receiptStatus, statusFilter)).toEqual(expected);
        });
    });
});
